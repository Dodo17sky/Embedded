/*--------------------------------------------------------------------------------
*                           Libraries
*--------------------------------------------------------------------------------*/
#include "ComManager.h"
#include <Arduino.h>
#include "Serial.h"

/*--------------------------------------------------------------------------------
*                           Global variables
*--------------------------------------------------------------------------------*/
static String uartMsg;
/*--------------------------------------------------------------------------------
*                           Const and Macro
*--------------------------------------------------------------------------------*/
#define INVALID_MSG_ID				0xFFFF

/*--------------------------------------------------------------------------------
*                           Functions prototypes declaration
*--------------------------------------------------------------------------------*/
static uint8 MessageInterpreter(void);
/*--------------------------------------------------------------------------------
*                           Functions prototypes definition
*--------------------------------------------------------------------------------*/

/*--------------------------------------------------------------------------------
@name		ComM_InitRunnable
@brief		Initialize communication setups
*--------------------------------------------------------------------------------*/
void ComM_InitRunnable(void)
{
	uartMsg.reserve(100);
}

/*--------------------------------------------------------------------------------
@name		ComM_MainRunnable
@brief		Main communication task
*--------------------------------------------------------------------------------*/
void ComM_MainRunnable(void)
{
	uartMsg = Serial_Read();
	if(uartMsg != "")
	{
		Serial_Write(">> [");
		Serial_Write(uartMsg);
		Serial_Write("]\n");
	}
}

/*--------------------------------------------------------------------------------
@name		MessageInterpreter
@brief		Analyze an UART message and
*--------------------------------------------------------------------------------*/
static uint8 MessageInterpreter()
{
	uint16 msgId = INVALID_MSG_ID;

	return msgId;
}
